{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "domainAdminUsername": {
      "type": "string",
      "defaultValue": "adminUser",
      "metadata": {
        "description": "The name of the administrator account of the new VM and domain"
      }
    },
    "domainAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and domain"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "example.com",
      "metadata": {
        "description": "The FQDN of the Active Directory Domain to be created. Must have a '.' like domain.local"
      }
    },
    "AzureAdminUsername": {
      "type": "string",
      "defaultValue": "adminuser@example.com",
      "metadata": {
        "description": "The name of the Azure account/service principal with contributor access to the subscription. This account cannot require MFA."
      }
    },
    "AzureAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the Azure account/service principal with contributor access to the subscription. This account cannot require MFA."
      }
    },
    "tenantID": {
        "type": "string",
        "defaultValue": "null",
        "metadata": {
            "description": "Tenant ID to use for the case where the Azure Admin account is a service principal. Leave as 'null' if a standard user (non-SP) account is being used."
        }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
          "description": "Existing VNET that contains the domain controller"
      }
    },
    "CSsubnetId": {
      "type": "string",
      "metadata": {
          "description": "ID of the subnet that the Conection Service Machines' NIC's attach to"
      }
    },
    "GWsubnetId": {
      "type": "string",
      "metadata": {
          "description": "ID of the subnet that the Conection Service gateway(s) attach to"
      }
    },
    "cmnsgName": {
      "type": "string",
      "metadata": {
          "description": "Connection Manager Network Security Group Name"
      }
    },
    "registrationCode": {
      "type": "securestring",
      "minLength": 21,
      "metadata": {
        "description": "PCoIP Agent License Registration Code."
      }
    },
    "camSaasUri": {
      "type": "string",
      "metadata": {
          "description": "URI for the CAM Service"
      }
    },
    "verifyCAMSaaSCertificate": {
      "type": "bool",
      "metadata": {
        "description": "a flag to indicate whether to verify CAM SaaS Server certificate. True means to verify."
      }
    },
    "CAMDeploymentInfo": {
      "type": "securestring",
      "metadata": {
          "description": "Encoded blob of authorization and URL information for the CAM Frontend."
      }
    },
    "certData": {
      "type": "string",
      "metadata": {
        "description": "Base-64 encoded form of the .pfx file for the Application Gateway Certificate"
      }
    },
    "certPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for .pfx certificate"
      }
    },
    "domainGroupAppServersJoin": {
      "type": "string",
      "metadata": {
          "description": "The domain group the application servers should join"
      }
    },
    "keyVaultId": {
      "type": "string",
      "metadata": {
          "description": "Id of the keyvault where user credentials for the deployment are stored."
      }
    },
    "CAMDeploymentBlobSource": {
      "type": "string",
      "metadata": {
        "description": "The location of the blobs for admin GUI machine installation"
      }
    },
    "_agentArtifactsLocation": {
      "type": "string",
      "metadata": {
          "description": "The location of resources, such as templates and DSC modules, specific to the PCoIP Agent"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniquestring(resourceGroup().id),'fe')]",
    "brokerPort":  "8444",
    "adVMName": "vm-dc",
    "serverRootName": "vm",
    "appGwName": "CAM-ApplicationGateway",
    "appGwSGPoolName": "SGBackendPool",
    "appGwSGPoolID": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationGateways/', variables('appGwName'), '/backendAddressPools/', variables('appGwSGPoolName'))]",
    "appGwCSPoolName": "CSBackendPool",
    "appGwCSPoolID": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationGateways/', variables('appGwName'), '/backendAddressPools/', variables('appGwCSPoolName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "CreateNetworkSGs",
      "apiVersion": "2016-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/new-sg-s/new-sg-s.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cmnsgName": {
            "value": "[parameters('cmnsgName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "CreateAdminMachine",
      "apiVersion": "2016-02-01",
      "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
	      "Microsoft.Resources/deployments/CreateAppGateway"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/new-vm-join-domain/new-vm-join-domain.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetId": {
            "value": "[parameters('CSsubnetId')]"
          },
          "dnsLabelPrefix": {
            "value": "[concat(variables('serverRootName'), '-au')]"
          },
          "vmSize": {
            "value": "Standard_A2_v2"
          },
          "domainToJoin": {
            "value": "[parameters('domainName')]"
          },
          "domainUsername": {
            "value": "[parameters('domainAdminUsername')]"
          },
          "domainPassword": {
            "value": "[parameters('domainAdminPassword')]"
          },
          "domainJoinOptions": {
            "value": 3
          },
          "vmAdminUsername": {
            "value": "[parameters('domainAdminUsername')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('domainAdminPassword')]"
          },
          "applicationGatewayPoolReference": {
            "value": "[variables('appGwCSPoolID')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "ConfigureAdminMachine",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateAdminMachine"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/new-admin-vm/new-admin-vm.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsLabelPrefix": {
            "value": "[concat(variables('serverRootName'), '-au')]"
          },
          "domainToJoin": {
            "value": "[parameters('domainName')]"
          },
          "domainGroupAppServersJoin": {
            "value": "[parameters('domainGroupAppServersJoin')]"
          },
          "domainUsername": {
            "value": "[parameters('domainAdminUsername')]"
          },
          "domainPassword": {
            "value": "[parameters('domainAdminPassword')]"
          },
          "AzureAdminUsername": {
            "value": "[parameters('AzureAdminUsername')]"
          },
          "AzureAdminPassword": {
            "value": "[parameters('AzureAdminPassword')]"
          },
          "tenantID": {
            "value": "[parameters('tenantID')]"
          },
          "vmAdminUsername": {
            "value": "[parameters('domainAdminUsername')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('domainAdminPassword')]"
          },
          "registrationCode": {
            "value": "[parameters('registrationCode')]"
          },
          "domainControllerName": {
            "value": "[variables('adVMName')]"
          },
          "CAMDeploymentBlobSource": {
            "value": "[parameters('CAMDeploymentBlobSource')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "_artifactsLocation": {
            "value": "[concat(parameters('_artifactsLocation'), '/new-admin-vm')]"
          },
          "_agentArtifactsLocation": {
              "value": "[parameters('_agentArtifactsLocation')]"
          },
          "camSaasUri": {
            "value": "[parameters('camSaasUri')]"
          },
          "verifyCAMSaaSCertificate": {
            "value": "[parameters('verifyCAMSaaSCertificate')]"
          },
          "keyVaultId": {
            "value": "[parameters('keyVaultId')]"
          },
          "CAMDeploymentInfo": {
            "value": "[parameters('CAMDeploymentInfo')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "CreateAppGateway",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "Microsoft.Resources/deployments/CreateNetworkSGs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/new-app-gateway/azuredeploy.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetRef": {
              "value": "[concat(resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName')),'/subnets/',parameters('gatewaySubnetName'))]"
          },
          "skuName": {
            "value": "Standard_Small"
          },
          "capacity": {
            "value": 1
          },
          "pathMatch1": {
            "value": "/pcoip-broker/*"
          },
          "certData": {
            "value": "[parameters('certData')]"
          },
          "certPassword": {
            "value": "[parameters('certPassword')]"
          },
          "SGBackendPoolName": {
            "value": "[variables('appGwSGPoolName')]"
          },
          "CSBackendPoolName": {
            "value": "[variables('appGwCSPoolName')]"
          },
          "applicationGatewayName": {
            "value": "[variables('appGwName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "Create-SG-VMSS",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateNetworkSGs",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "Microsoft.Resources/deployments/CreateAppGateway"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/new-cm-sg-ls-vm/azuredeploy.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "existingVNETName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "existingSubnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "cmnsgName": {
            "value": "[parameters('cmnsgName')]"
          },
          "vmSku": {
            "value": "Standard_A1_v2"
          },
          "vmssName": {
            "value": "SG-VMSS"
          },
          "instanceCount": {
            "value": 1
          },
          "appGwbackendAddressPoolId": {
            "value": "[variables('appGwSGPoolID')]"
          },
          "vmAdminUsername": {
            "value": "[parameters('domainAdminUsername')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('domainAdminPassword')]"
          },
          "brokerFQDN": {
            "value": "[concat(variables('serverRootName'), '-au','.',parameters('domainName'),':',variables('brokerPort'))]"
          },
          "_artifactsLocation": {
            "value": "[concat(parameters('_artifactsLocation'), '/new-cm-sg-ls-vm')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    }
  ]
}
