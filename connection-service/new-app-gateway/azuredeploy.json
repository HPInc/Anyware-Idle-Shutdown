{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "subnetRef": {
      "type": "string",
      "metadata": {
        "description": "Subnet resource reference in the form of (vnet resourceId/subnets/(subnetname))"
      }
    },
    "skuName": {
      "type": "string",
      "allowedValues": [
        "Standard_Small",
        "Standard_Medium",
        "Standard_Large"
      ],
      "defaultValue": "Standard_Medium",
      "metadata": {
        "description": "Sku Name"
      }
    },
    "capacity": {
      "type": "int",
      "minValue": 1,
      "maxValue": 10,
      "defaultValue": 2,
      "metadata": {
        "description": "Number of instances"
      }
    },
    "pathMatch1": {
      "type": "string",
      "metadata": {
        "description": "Path match string for Path Rule 1"
      }
    },
    "certData": {
      "type": "string",
      "metadata": {
        "description": "Base-64 encoded form of the .pfx file"
      }
    },
    "certPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for .pfx certificate"
      }
    },
    "SGBackendPoolName": {
      "type": "string",
      "metadata": {
        "description": "Security Gateway backend pool name"
      }
    },
    "CSBackendPoolName": {
      "type": "string",
      "metadata": {
        "description": "Connection Service backend pool name"
      }
    },
    "applicationGatewayName": {
      "type": "string",
      "metadata": {
        "description": "Application Gateway Name including the unique CS suffix"
      }
    },
    "externalAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Application Gateway Name including the unique CS suffix"
      }
    },
    "CSUniqueSuffix": {
      "type": "string",
      "metadata": {
          "description": "Suffix to add to connection service resources to ensure uniqueness."
      }
    }
  },
  "variables": {
    "publicIPAddressName": "[concat('appGatewayPublicIP',parameters('CSUniqueSuffix'))]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',parameters('applicationGatewayName'))]",
    "apiVersion": "2017-11-01",
    "externalAccess": {
      "false" : {
        "appGwFrontendHttpsPort": 0,
        "appGwFrontendHttpPort": 80,
        "appGwFrontendPrivatePort": 443,
        "appGwBackendPort": 8080
      },
      "true" : {
        "appGwFrontendHttpsPort": 443,
        "appGwFrontendHttpPort": 80,
        "appGwFrontendPrivatePort": 8443,
        "appGwBackendPort": 8080
      }
    },
    "appGwFrontendHttpsPort":   "[variables('externalAccess')[string(parameters('externalAccess'))]['appGwFrontendHttpsPort']]",
    "appGwFrontendHttpPort":    "[variables('externalAccess')[string(parameters('externalAccess'))]['appGwFrontendHttpPort']]",
    "appGwFrontendPrivatePort": "[variables('externalAccess')[string(parameters('externalAccess'))]['appGwFrontendPrivatePort']]",
    "appGwBackendPort":         "[variables('externalAccess')[string(parameters('externalAccess'))]['appGwBackendPort']]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "condition": "[parameters('externalAccess')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "[parameters('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[if(parameters('externalAccess'), concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName')), json('null'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('skuName')]",
          "tier": "Standard",
          "capacity": "[parameters('capacity')]"
        },
        "sslCertificates": [
          {
            "name": "appGatewaySslCert",
            "properties": {
              "data": "[parameters('certData')]",
              "password": "[parameters('certPassword')]"
            }
          }
        ],
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[parameters('subnetRef')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "condition": "[parameters('externalAccess')]",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('publicIPRef')]"
              }
            }
          },
          {
            "name": "appGatewayFrontendPrivateIP",
            "properties": {
              "subnet": {
                "id": "[parameters('subnetRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendHttpPort",
            "properties": {
              "Port": "[variables('appGwFrontendHttpPort')]"
            }
          },
          {
            "name": "appGatewayFrontendHttpsPort",
            "properties": {
              "Port": "[variables('appGwFrontendHttpsPort')]"
            }
          },
          {
            "name": "appGatewayFrontendPrivatePort",
            "condition": "[greater(variables('appGwFrontendPrivatePort'), 0)]",
            "properties": {
              "Port": "[variables('appGwFrontendPrivatePort')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[parameters('CSBackendPoolName')]"
          },
          {
            "name": "[parameters('SGBackendPoolName')]"
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "Port": "[variables('appGwBackendPort')]",
              "Protocol": "Http",
              "CookieBasedAffinity": "Enabled"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendHttpPort')]"
              },
              "Protocol": "Http"
            }
          },
          {
            "name": "appGatewayHttpsListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendHttpsPort')]"
              },
              "Protocol": "Https",
              "SslCertificate": {
                "Id": "[concat(variables('applicationGatewayID'), '/sslCertificates/appGatewaySslCert')]"
              }
            }
          },
          {
            "name": "appGatewayPrivateHttpsListener",
            "condition": "[greater(variables('appGwFrontendPrivatePort'), 0)]",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendPrivateIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPrivatePort')]"
              },
              "Protocol": "Https",
              "SslCertificate": {
                "Id": "[concat(variables('applicationGatewayID'), '/sslCertificates/appGatewaySslCert')]"
              }
            }
          }
        ],
        "redirectConfigurations": [
          {
            "Name": "redirectHttpConfig",
            "properties": {
              "redirectType": "Permanent",
              "targetListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpsListener')]"
              }
            }
          }
        ],
        "urlPathMaps": [
          {
            "name": "urlPathMap1",
            "properties": {
              "defaultBackendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/', parameters('CSBackendPoolName') )]"
              },
              "defaultBackendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
              },
              "pathRules": [
                {
                  "name": "pathRule1",
                  "properties": {
                    "paths": [
                      "[parameters('pathMatch1')]"
                    ],
                    "backendAddressPool": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/', parameters('SGBackendPoolName') )]"
                    },
                    "backendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
                    }
                  }
                }
              ]
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "externalHttpRule",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
              },
              "redirectConfiguration": {
                "id": "[concat(variables('applicationGatewayID'), '/redirectConfigurations/redirectHttpConfig')]"
              }
            }
          },
          {
            "Name": "externalHttpsRule",
            "properties": {
              "RuleType": "PathBasedRouting",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpsListener')]"
              },
              "urlPathMap": {
                "id": "[concat(variables('applicationGatewayID'), '/urlPathMaps/urlPathMap1')]"
              }
            }
          },
          {
            "Name": "internalRule",
            "condition": "[greater(variables('appGwFrontendPrivatePort'), 0)]",
            "properties": {
              "RuleType": "PathBasedRouting",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayPrivateHttpsListener')]"
              },
              "urlPathMap": {
                "id": "[concat(variables('applicationGatewayID'), '/urlPathMaps/urlPathMap1')]"
              }
            }
          }
        ]
      }
    }
  ]
}