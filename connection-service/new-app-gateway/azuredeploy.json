{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "subnetRef": {
      "type": "string",
      "metadata": {
        "description": "Subnet resource reference in the form of (vnet resourceId/subnets/(subnetname))"
      }
    },
    "skuName": {
      "type": "string",
      "allowedValues": [
        "Standard_Small",
        "Standard_Medium",
        "Standard_Large"
      ],
      "defaultValue": "Standard_Medium",
      "metadata": {
        "description": "Sku Name"
      }
    },
    "capacity": {
      "type": "int",
      "minValue": 1,
      "maxValue": 10,
      "defaultValue": 2,
      "metadata": {
        "description": "Number of instances"
      }
    },
    "pathMatch1": {
      "type": "string",
      "metadata": {
        "description": "Path match string for Path Rule 1"
      }
    },
    "certData": {
      "type": "string",
      "metadata": {
        "description": "Base-64 encoded form of the .pfx file"
      }
    },
    "certPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for .pfx certificate"
      }
    },
    "SGBackendPoolName": {
      "type": "string",
      "metadata": {
        "description": "Security Gateway backend pool name"
      }
    },
    "CSBackendPoolName": {
      "type": "string",
      "metadata": {
        "description": "Connection Service backend pool name"
      }
    },
    "applicationGatewayName": {
      "type": "string",
      "metadata": {
        "description": "Application Gateway Name including the unique CS suffix"
      }
    },
    "enableExternalAccess": {
      "type": "bool",
      "metadata": {
          "description": "'true' if a Public IP address should be created, otherwise 'false'."
      }
    },
    "enableRadiusMfa": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Indicates weather or not MFA is enabled"
      }
    },
    "CSUniqueSuffix": {
      "type": "string",
      "metadata": {
          "description": "Suffix to add to connection service resources to ensure uniqueness."
      }
    }
  },
  "variables": {
    "publicIPAddressName": "[concat('appGatewayPublicIP',parameters('CSUniqueSuffix'))]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',parameters('applicationGatewayName'))]",
    "apiVersion": "2017-11-01",
    "enableExternalGUIAccess": "[bool(and(equals(parameters('enableRadiusMfa'), 'False'), parameters('enableExternalAccess')))]",
    "pcoipPathRules": [
      {
        "name": "pcoipBrokerProtocolRule",
        "properties": {
          "paths": [
            "[parameters('pathMatch1')]"
          ],
          "backendAddressPool": {
            "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/', parameters('SGBackendPoolName') )]"
          },
          "backendHttpSettings": {
            "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
          }
        }
      }
    ],
    "baseAppGatewayConfig": {
      "frontendPorts" : [
        {
          "name": "appGatewayFrontendHttpPort",
          "properties": {
            "Port": 80
          }
        },
        {
          "name": "appGatewayFrontendHttpsPort",
          "properties": {
            "Port": 443
          }
        }
      ],
      "httpListeners" : [
        {
          "name": "appGatewayHttpListener",
          "properties": {
            "FrontendIPConfiguration": {
              "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
            },
            "FrontendPort": {
              "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendHttpPort')]"
            },
            "Protocol": "Http"
          }
        },
        {
          "name": "appGatewayHttpsListener",
          "properties": {
            "FrontendIPConfiguration": {
              "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
            },
            "FrontendPort": {
              "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendHttpsPort')]"
            },
            "Protocol": "Https",
            "SslCertificate": {
              "Id": "[concat(variables('applicationGatewayID'), '/sslCertificates/appGatewaySslCert')]"
            }
          }
        }
      ],
      "requestRoutingRules": [
        {
          "Name": "httpRule",
          "properties": {
            "RuleType": "Basic",
            "httpListener": {
              "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
            },
            "redirectConfiguration": {
              "id": "[concat(variables('applicationGatewayID'), '/redirectConfigurations/redirectHttpConfig')]"
            }
          }
        },
        {
          "Name": "httpsRule",
          "properties": {
            "RuleType": "PathBasedRouting",
            "httpListener": {
              "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpsListener')]"
            },
            "urlPathMap": {
              "id": "[concat(variables('applicationGatewayID'), '/urlPathMaps/', if(not(and(parameters('enableExternalAccess'), parameters('enableRadiusMfa'))), 'pcoipBrokerProtocolUserInterfacePath', 'pcoipBrokerProtocolPath') )]"
            }
          }
        }
      ]
    },
    "internalAppGatewayConfig": {
      "frontendPorts": [
        {
          "name": "appGatewayFrontendPrivatePort",
          "properties": {
            "Port": 8443
          }
        }
      ],
      "httpListeners": [
        {
          "name": "appGatewayPrivateHttpsListener",
          "properties": {
            "FrontendIPConfiguration": {
              "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendPrivateIP')]"
            },
            "FrontendPort": {
              "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPrivatePort')]"
            },
            "Protocol": "Https",
            "SslCertificate": {
              "Id": "[concat(variables('applicationGatewayID'), '/sslCertificates/appGatewaySslCert')]"
            }
          }
        }
      ],
      "requestRoutingRules": [
        {
          "Name": "internalRule",
          "properties": {
            "RuleType": "PathBasedRouting",
            "httpListener": {
              "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayPrivateHttpsListener')]"
            },
            "urlPathMap": {
              "id": "[concat(variables('applicationGatewayID'), '/urlPathMaps/pcoipBrokerProtocolUserInterfacePath')]"
            }
          }
        }
      ]
    },
    "ipConfiguration": {
      "internal": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "subnet": {
                "id": "[parameters('subnetRef')]"
              }
            }
          }
      ],
      "external": [
        {
          "name": "appGatewayFrontendIP",
          "properties": {
            "PublicIPAddress": {
              "id": "[variables('publicIPRef')]"
            }
          }
        },
        {
          "name": "appGatewayFrontendPrivateIP",
          "properties": {
            "subnet": {
              "id": "[parameters('subnetRef')]"
            }
          }
        }
      ]
    },
    "appGwBackendPort":         8080,
    "frontendIPConfigurations": "[if(parameters('enableExternalAccess'), variables('ipConfiguration')['external'], variables('ipConfiguration')['internal'])]",
    "frontendPorts":            "[if(parameters('enableExternalAccess'), concat(variables('baseAppGatewayConfig')['frontendPorts'],       variables('internalAppGatewayConfig')['frontendPorts']),        variables('baseAppGatewayConfig')['frontendPorts'])]",
    "httpListeners":            "[if(parameters('enableExternalAccess'), concat(variables('baseAppGatewayConfig')['httpListeners'],       variables('internalAppGatewayConfig')['httpListeners']),        variables('baseAppGatewayConfig')['httpListeners'])]",
    "requestRoutingRules":      "[if(parameters('enableExternalAccess'), concat(variables('baseAppGatewayConfig')['requestRoutingRules'], variables('internalAppGatewayConfig')['requestRoutingRules']),  variables('baseAppGatewayConfig')['requestRoutingRules'])]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "condition": "[parameters('enableExternalAccess')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "[parameters('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('skuName')]",
          "tier": "Standard",
          "capacity": "[parameters('capacity')]"
        },
        "frontendIPConfigurations": "[variables('frontendIPConfigurations')]",
        "frontendPorts":            "[variables('frontendPorts')]",
        "httpListeners":            "[variables('httpListeners')]",
        "requestRoutingRules":      "[variables('requestRoutingRules')]",
        "sslCertificates": [
          {
            "name": "appGatewaySslCert",
            "properties": {
              "data": "[parameters('certData')]",
              "password": "[parameters('certPassword')]"
            }
          }
        ],
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[parameters('subnetRef')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[parameters('CSBackendPoolName')]"
          },
          {
            "name": "[parameters('SGBackendPoolName')]"
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "Port": "[variables('appGwBackendPort')]",
              "Protocol": "Http",
              "CookieBasedAffinity": "Enabled"
            }
          }
        ],
        "redirectConfigurations": [
          {
            "Name": "redirectHttpConfig",
            "properties": {
              "redirectType": "Permanent",
              "targetListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpsListener')]"
              }
            }
          }
        ],
        "urlPathMaps": [
          {
            "name": "pcoipBrokerProtocolUserInterfacePath",
            "properties": {
              "defaultBackendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/',  parameters('CSBackendPoolName'))]"
              },
              "defaultBackendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
              },
              "pathRules": "[variables('pcoipPathRules')]"
            }
          }, 
          {
            "name": "pcoipBrokerProtocolPath",
            "properties": {
              "defaultBackendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/', parameters('SGBackendPoolName') )]"
              },
              "defaultBackendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
              },
              "pathRules": "[variables('pcoipPathRules')]"
            }
          }
        ]
      }
    }
  ]
}