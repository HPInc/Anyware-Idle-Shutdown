{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "domainServiceAccountUsername": {
      "type": "string",
      "defaultValue": "adminuser",
      "metadata": {
        "description": "The name of the administrator account of the new VM and domain"
      }
    },
    "domainServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and domain"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The fully qualified domain name of the domain to connect to. The name must include a '.' such as example.com"
      }
    },
    "localAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the local admin account for connection service VM's"
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the local admin account for connection service VM's"
      }
    },
    "CSUniqueSuffix": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
          "description": "Suffix to add to connection service resources to ensure uniqueness."
      }
    },
    "CSsubnetId": {
      "type": "string",
      "metadata": {
          "description": "The ID of the subnet that the Conection Service Machines' NIC's attach to"
      }
    },
    "GWsubnetId": {
      "type": "string",
      "metadata": {
          "description": "The ID of the subnet that the Conection Service gateway(s) attach to"
      }
    },
    "CAMDeploymentInfo": {
      "type": "securestring",
      "metadata": {
          "description": "Encoded blob of authorization and URL information for the CAM Connection Service."
      }
    },
    "certData": {
      "type": "string",
      "metadata": {
        "description": "Base-64 encoded form of the .pfx file for the Application Gateway Certificate"
      }
    },
    "certPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for .pfx certificate"
      }
    },
    "remoteWorkstationDomainGroup": {
      "type": "string",
      "metadata": {
          "description": "The domain group the remote workstations should join"
      }
    },
    "binaryLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of CAM binaries"
      }
    },
    "enableExternalAccess": {
      "type": "string",
      "metadata": {
          "description": "'true' if the security gateway should be enabled and a Public IP address created, otherwise 'false'."
      }
    },
    "_baseArtifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base location (URI) of the deployment. This file is being run from _baseArtifactsLocation/connection-service"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      },
      "defaultValue": ""
    },
    "enableRadiusMfa" : {
      "type": "string",
      "metadata": {
        "description": "Enable RADIUS based MFA?"
      },
      "defaultValue": "False"
    },
    "licenseInstanceId": {
      "type": "string",
      "metadata": {
        "description": "License Instance Id for the CAM deployment"
      }
    },
    "brokerRetrieveAgentState": {
      "type": "bool",
      "metadata": {
        "description": "configuration of retrieving pcoip agent state"
      },
      "defaultValue": true
    },
    "clientShowAgentState": {
      "type": "bool",
      "metadata": {
        "description": "configuration of display pcoip agent state"
      },
      "defaultValue": true
    }
  },
  "variables": {
    "_artifactsLocation":  "[concat(parameters('_baseArtifactsLocation'), '/connection-service')]",
    "brokerPort":  "8444",
    "appGwName": "[concat('CAM-ApplicationGateway',parameters('CSUniqueSuffix'))]",
    "appGwSGPoolName": "SGBackendPool",
    "appGwSGPoolID": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationGateways/', variables('appGwName'), '/backendAddressPools/', variables('appGwSGPoolName'))]",
    "appGwCSPoolName": "CSBackendPool",
    "appGwCSPoolID": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationGateways/', variables('appGwName'), '/backendAddressPools/', variables('appGwCSPoolName'))]",
    "sgNsgName": "[concat('sgNSG',parameters('CSUniqueSuffix'))]",
    "connectionServerName": "[concat('conn-srvr',parameters('CSUniqueSuffix'))]"
},
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "CreateNetworkSGs",
      "apiVersion": "2016-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('_artifactsLocation'), '/new-sg-s/new-sg-s.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sgNsgName": {
            "value": "[variables('sgNsgName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "CreateConnectionServer",
      "apiVersion": "2016-02-01",
      "dependsOn": [
	      "Microsoft.Resources/deployments/CreateAppGateway"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('_artifactsLocation'), '/new-vm-join-domain/new-vm-join-domain.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetId": {
            "value": "[parameters('CSsubnetId')]"
          },
          "dnsLabelPrefix": {
            "value": "[variables('connectionServerName')]"
          },
          "vmSize": {
            "value": "Standard_D2s_v3"
          },
          "domainToJoin": {
            "value": "[parameters('domainName')]"
          },
          "domainUsername": {
            "value": "[parameters('domainServiceAccountUsername')]"
          },
          "domainPassword": {
            "value": "[parameters('domainServiceAccountPassword')]"
          },
          "domainJoinOptions": {
            "value": 3
          },
          "vmAdminUsername": {
            "value": "[parameters('localAdminUsername')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "applicationGatewayPoolReference": {
            "value": "[variables('appGwCSPoolID')]"
          },
          "_artifactsLocation": {
            "value": "[concat(variables('_artifactsLocation'), '/new-vm-join-domain')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "ConfigureConnectionServer",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateConnectionServer"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('_artifactsLocation'), '/new-admin-vm/new-admin-vm.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsLabelPrefix": {
            "value": "[variables('connectionServerName')]"
          },
          "remoteWorkstationDomainGroup": {
            "value": "[parameters('remoteWorkstationDomainGroup')]"
          },
          "domainUsername": {
            "value": "[parameters('domainServiceAccountUsername')]"
          },
          "domainPassword": {
            "value": "[parameters('domainServiceAccountPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "binaryLocation": {
            "value": "[parameters('binaryLocation')]"
          },
          "_artifactsLocation": {
            "value": "[concat(variables('_artifactsLocation'), '/new-admin-vm')]"
          },
          "CAMDeploymentInfo": {
            "value": "[parameters('CAMDeploymentInfo')]"
          },
          "enableRadiusMfa": {
            "value": "[parameters('enableRadiusMfa')]"
          },
          "licenseInstanceId": {
            "value": "[parameters('licenseInstanceId')]"
          },
          "brokerRetrieveAgentState": {
            "value": "[parameters('brokerRetrieveAgentState')]"
          },
          "clientShowAgentState": {
            "value": "[parameters('clientShowAgentState')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "CreateAppGateway",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateNetworkSGs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('_artifactsLocation'), '/new-app-gateway/azuredeploy.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetRef": {
              "value": "[parameters('GWsubnetId')]"
          },
          "skuName": {
            "value": "Standard_Small"
          },
          "capacity": {
            "value": 1
          },
          "pathMatch1": {
            "value": "/pcoip-broker/*"
          },
          "certData": {
            "value": "[parameters('certData')]"
          },
          "certPassword": {
            "value": "[parameters('certPassword')]"
          },
          "SGBackendPoolName": {
            "value": "[variables('appGwSGPoolName')]"
          },
          "CSBackendPoolName": {
            "value": "[variables('appGwCSPoolName')]"
          },
          "applicationGatewayName": {
            "value": "[variables('appGwName')]"
          },
          "CSUniqueSuffix": {
            "value": "[parameters('CSUniqueSuffix')]"
          },
          "enableExternalAccess": {
            "value": "[bool(parameters('enableExternalAccess'))]"
          },
          "disableExternalUserInterface": {
            "value": "[bool(parameters('enableRadiusMfa'))]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "Create-SG-VMSS",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateNetworkSGs",
        "Microsoft.Resources/deployments/CreateAppGateway"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('_artifactsLocation'), '/new-cm-sg-ls-vm/azuredeploy.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetId": {
            "value": "[parameters('CSsubnetId')]"
          },
          "sgNsgName": {
            "value": "[variables('sgNsgName')]"
          },
          "vmSku": {
            "value": "Standard_A2_v2"
          },
          "vmssName": {
            "value": "[concat('SG-VMSS',parameters('CSUniqueSuffix'))]"
          },
          "instanceCount": {
            "value": 1
          },
          "appGwbackendAddressPoolId": {
            "value": "[variables('appGwSGPoolID')]"
          },
          "vmAdminUsername": {
            "value": "[parameters('localAdminUsername')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "brokerFQDN": {
            "value": "[concat(reference('CreateConnectionServer').outputs.privateIp.value,':',variables('brokerPort'))]"
          },
          "enableSecurityGateway": {
            "value": "[parameters('enableExternalAccess')]"
          },
          "_artifactsLocation": {
            "value": "[concat(variables('_artifactsLocation'), '/new-cm-sg-ls-vm')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "licenseInstanceId": {
            "value": "[parameters('licenseInstanceId')]"
          }
        }
      }
    }
  ]
}
