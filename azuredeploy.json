{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "domainAdminUsername": {
      "type": "string",
      "defaultValue": "adminUser",
      "metadata": {
        "description": "The name of the administrator account of the new VM and domain"
      }
    },
    "domainAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and domain"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "example.com",
      "metadata": {
        "description": "The FQDN of the Active Directory Domain to be created. Must have a '.' like domain.local"
      }
    },
    "remoteWorkstationDomainGroup": {
      "type": "string",
      "metadata": {
        "description": "The name of the domain group that Remote Workstations are joined to"
      }
    },
    "localAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the local admin account for connection service VM's"
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password/key for the local VM accounts."
      }
    },
    "rwsLocalAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the local admin account for remote workstation VM's"
      }
    },
    "rwsLocalAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password/key for the local remote workstation accounts."
      }
    },
    "registrationCode": {
      "type": "securestring",
      "minLength": 21,
      "metadata": {
        "description": "PCoIP Agent License Registration Code."
      }
    },
    "certData": {
      "type": "string",
      "metadata": {
        "description": "Base-64 encoded form of the .pfx file for the Application Gateway Certificate"
      }
    },
    "certPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for .pfx certificate"
      }
    },
    "connectionServiceResourceGroup": {
      "type": "string",
      "metadata": {
          "description": "The resource group the connection service is deployed in."
      }
    },
    "remoteWorkstationResourceGroup": {
      "type": "string",
      "metadata": {
          "description": "The resource group the remote workstations are deployed in."
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
          "description": "The name of the virtual network to be created for CAM."
      }
    },
    "rootSubnetName": {
      "type": "string",
      "metadata": {
          "description": "The name of the root subnet in the virtual network."
      }
    },
    "remoteWorkstationSubnetName": {
      "type": "string",
      "metadata": {
          "description": "The name of the remote workstation subnet in the virtual network."
      }
    },
    "connectionServiceSubnetName": {
      "type": "string",
      "metadata": {
          "description": "The name of the connection service subnet in the virtual network."
      }
    },
    "gatewaySubnetName": {
      "type": "string",
      "metadata": {
          "description": "The name of the subnet for application gateways in the virtual network."
      }
    },
    "AgentChannel": {
      "type": "string",
      "defaultValue": "stable",
      "allowedValues": ["stable","beta","dev"],
      "metadata": {
        "description": "PCoIP Agent channel to use for installer download."
      }
    },
    "CAMDeploymentInfo": {
      "type": "securestring",
      "metadata": {
          "description": "Encoded blob of authorization and URL information for the CAM Connection Service."
      }
    },
    "binaryLocation": {
      "type": "string",
      "defaultValue": "https://teradeploy.blob.core.windows.net/binaries",
      "metadata": {
        "description": "The location of the CAM binaries"
      }
    },
    "userStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the user's storage account"
      }
    },
    "userStorageAccountUri": {
      "type": "string",
      "metadata": {
        "description": "The URI of the user's storage account"
      }
    },
    "userStorageAccountSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "SAS token requried to access user's storage account"
      }
    },
    "userStorageAccountKey": {
      "type": "securestring",
      "metadata": {
        "description": "User's storage account key"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      },
      "defaultValue": "https://raw.githubusercontent.com/teradici/deploy/cam-radius-settings"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      },
      "defaultValue": ""
    },
    "enableRadiusMfa" : {
      "type": "string",
      "metadata": {
        "description": "Is RADIUS MFA enabled?"
      },
      "defaultValue": "False"
    },
    "radiusServerHost" : {
      "type": "string",
      "metadata": {
        "description": "RADIUS server host name/IP address for MFA"
      },
      "defaultValue": ""
    },
    "radiusServerPort" : {
      "type": "string",
      "metadata": {
        "description": "RADIUS server listen port for MFA"
      },
      "defaultValue": "1812"
    },
    "radiusSharedSecret" : {
      "type": "securestring",
      "metadata": {
        "description": "Shared secret between RADIUS server and client"
      }
    }
  },
  "variables": {
    "adminDesktopVMName": "admin-rw"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "Root",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/root/azuredeploy.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "domainAdminUsername": {
            "value": "[parameters('domainAdminUsername')]"
          },
          "domainAdminPassword": {
            "value": "[parameters('domainAdminPassword')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "rootSubnetName": {
              "value": "[parameters('rootSubnetName')]"
          },
          "remoteWorkstationSubnetName": {
              "value":"[parameters('remoteWorkstationSubnetName')]"
          },
          "connectionServiceSubnetName": {
              "value": "[parameters('connectionServiceSubnetName')]"
          },
          "gatewaySubnetName": {
              "value": "[parameters('gatewaySubnetName')]"
          },
          "binaryLocation": {
            "value": "[parameters('binaryLocation')]"
          },
          "_artifactsLocation": {
            "value": "[concat(parameters('_artifactsLocation'), '/root')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "ConnectionService",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "Microsoft.Resources/deployments/Root"
      ],
      "resourceGroup": "[parameters('connectionServiceResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/connection-service/azuredeploy.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "CSsubnetId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', reference('Root').outputs.virtualNetworkName.value, reference('Root').outputs.csSubnetName.value)]"
          },
          "GWsubnetId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', reference('Root').outputs.virtualNetworkName.value, reference('Root').outputs.gatewaySubnetName.value)]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "domainAdminUsername": {
            "value": "[parameters('domainAdminUsername')]"
          },
          "domainAdminPassword": {
            "value": "[parameters('domainAdminPassword')]"
          },
          "remoteWorkstationDomainGroup": {
            "value": "[parameters('remoteWorkstationDomainGroup')]"
          },
          "localAdminUsername": {
            "value": "[parameters('localAdminUsername')]"
          },
          "localAdminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "certData": {
            "value": "[parameters('certData')]"
          },
          "certPassword": {
            "value": "[parameters('certPassword')]"
          },
          "CAMDeploymentInfo": {
            "value": "[parameters('CAMDeploymentInfo')]"
          },
          "binaryLocation": {
            "value": "[parameters('binaryLocation')]"
          },
          "_baseArtifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "enableRadiusMfa": {
            "value": "[parameters('enableRadiusMfa')]"
          },
          "radiusServerHost": {
            "value": "[parameters('radiusServerHost')]"
          },
          "radiusServerPort": {
            "value": "[parameters('radiusServerPort')]"
          },
          "radiusSharedSecret": {
            "value": "[parameters('radiusSharedSecret')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "CreateRemoteWorkstation",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "Microsoft.Resources/deployments/Root"
      ],
      "resourceGroup": "[parameters('remoteWorkstationResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/remote-workstations/azuredeploy.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', reference('Root').outputs.virtualNetworkName.value, reference('Root').outputs.rwSubnetName.value)]"
          },
          "dnsLabelPrefix": {
            "value" : "[variables('adminDesktopVMName')]"
          },
          "vmSize": {
            "value": "Standard_D2_v2"
          },
          "domainToJoin": {
            "value": "[parameters('domainName')]"
          },
          "domainUsername": {
            "value": "[parameters('domainAdminUsername')]"
          },
          "domainPassword": {
            "value": "[parameters('domainAdminPassword')]"
          },
          "domainJoinOptions": {
            "value": 3
          },
          "vmAdminUsername": {
            "value": "[parameters('rwsLocalAdminUsername')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('rwsLocalAdminPassword')]"
          },
          "domainGroupToJoin": {
            "value": "[parameters('remoteWorkstationDomainGroup')]"
          },
          "CAMDeploymentInfo": {
            "value": "[parameters('CAMDeploymentInfo')]"
          },
          "registrationCode": {
            "value": "[parameters('registrationCode')]"
          },
          "AgentChannel": {
            "value": "[parameters('AgentChannel')]"
          },
          "userStorageAccountName": {
            "value": "[parameters('userStorageAccountName')]"
          },
          "userStorageAccountUri": {
            "value": "[parameters('userStorageAccountUri')]"
          },
          "userStorageAccountSasToken": {
            "value": "[parameters('userStorageAccountSasToken')]"
          },
          "userStorageAccountKey": {
            "value": "[parameters('userStorageAccountKey')]"
          },
          "binaryLocation": {
            "value": "[parameters('binaryLocation')]"
          }
        }
      }
    }
  ]
}
