{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the administrator account of the new VM and domain"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the administrator account of the new VM and domain"
            }
        },
        "domainName": {
            "type": "string",
            "metadata": {
                "description": "The FQDN of the Active Directory Domain to be created. Must have a '.' like domain.local"
            }
        },
        "activationCode": {
            "type": "string",
            "defaultValue": "xxxx-xxxx-xxxx-xxxx",
            "metadata": {
                "description": "The license activation code for the PCoIP CAS licenses"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources, such as templates and DSC modules, that the template depends on"
            },
            "defaultValue": "https://raw.githubusercontent.com/teradici/deploy/master/dev/domain-controller"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "virtualNetworkName": "adVNET",
        "virtualNetworkAddressRange": "10.0.0.0/16",
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'adsa')]",
        "adLBFE": "LBFE",
        "adLBBE": "LBBE",
        "adRDPNAT": "adRDP",
        "adNicName": "adNic",
        "adNicIPAddress": "10.0.0.4",
        "adVMName": "adVM",
        "adSubnetName": "adSubnet",
        "adSubnetAddressPrefix": "10.0.0.0/24",
        "publicIPAddressName": "adPublicIP",
        "adAvailabilitySetName": "adAvailabiltySet",
        "adLBName": "adLoadBalancer",
        "DCDnsPrefix": "[resourceGroup().name]"

    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": { }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('DCDnsPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('adAvailabilitySetName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": { }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "VNet",
            "apiVersion": "2016-02-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/new-vnet/vnet.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('adSubnetName')]"
                    },
                    "subnetRange": {
                        "value": "[variables('adSubnetAddressPrefix')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('adLBName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('adLBFE')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('adLBBE')]"
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[variables('adRDPNAT')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('adLBName'), variables('adLBFE'))]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 3389,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('adNicName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Resources/deployments/VNet",
                "[resourceId('Microsoft.Network/loadBalancers', variables('adLBName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('adNicIPAddress')]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('adSubnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('adLBName'), variables('adLBBE'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('adLBName'), variables('adRDPNAT'))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('adVMName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('adNicName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('adLBName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2_v2"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
                },
                "osProfile": {
                    "computerName": "[variables('adVMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob, 'vhds/', variables('adVMName'), '-os-disk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "vhd": {
                                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob, 'vhds/', variables('adVMName'), '-data-disk.vhd')]"
                            },
                            "name": "[concat(variables('adVMName'), '-data-disk')]",
                            "caching": "None",
                            "createOption": "Empty",
                            "diskSizeGB": "100",
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('adNicName'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "ConfigureDCandCA",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('adVMName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/configure-dc-and-ca/configure-dc-and-ca.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "existingVNETName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "domainControllerVMName": {
                        "value": "[variables('adVMName')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "adminDesktopVMName": {
                        "value": "[concat(variables('DCDnsPrefix'), '-desk')]"
                    },
                    "_artifactsLocation": {
                        "value": "[concat(parameters('_artifactsLocation'), '/configure-dc-and-ca')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SetDNSForVNet",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/ConfigureDCandCA"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/new-vnet/vnet.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('adSubnetName')]"
                    },
                    "subnetRange": {
                        "value": "[variables('adSubnetAddressPrefix')]"
                    },
                    "DNSServerAddress": {
                        "value": ["[variables('adNicIPAddress')]"]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "CreateAgentMachine",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetDNSForVNet"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/new-agent-vm/new-agent.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "existingVNETName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "existingSubnetName": {
                        "value": "[variables('adSubnetName')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "[concat(variables('DCDnsPrefix'), '-desk')]"
                    },
                    "vmSize": {
                        "value": "Standard_A2_v2"
                    },
                    "domainToJoin": {
                        "value": "[parameters('domainName')]"
                    },
                    "domainUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "domainPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "domainJoinOptions": {
                        "value": 3
                    },
                    "vmAdminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "vmAdminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "_artifactsLocation": {
                        "value": "[concat(parameters('_artifactsLocation'), '/new-agent-vm')]"
                    },
                    "storageAccountName": {
                        "value":  "[variables('storageAccountName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "CreateAdminMachine",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetDNSForVNet"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/new-vm-join-domain/new-vm-join-domain.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "existingVNETName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "existingSubnetName": {
                        "value": "[variables('adSubnetName')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "[concat(variables('DCDnsPrefix'), '-au')]"
                    },
                    "vmSize": {
                        "value": "Standard_A2_v2"
                    },
                    "domainToJoin": {
                        "value": "[parameters('domainName')]"
                    },
                    "domainUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "domainPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "domainJoinOptions": {
                        "value": 3
                    },
                    "vmAdminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "vmAdminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "storageAccountName": {
                        "value":  "[variables('storageAccountName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "ConfigureAdminMachine",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/CreateAdminMachine"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/new-admin-vm/new-admin-vm.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "existingVNETName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "existingSubnetName": {
                        "value": "[variables('adSubnetName')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "[concat(variables('DCDnsPrefix'), '-au')]"
                    },
                    "vmSize": {
                        "value": "Standard_A2_v2"
                    },
                    "domainToJoin": {
                        "value": "[parameters('domainName')]"
                    },
                    "domainUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "domainPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "domainJoinOptions": {
                        "value": 3
                    },
                    "vmAdminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "vmAdminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "_artifactsLocation": {
                        "value": "[concat(parameters('_artifactsLocation'), '/new-admin-vm')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "CreateBrokerMachine",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetDNSForVNet"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/new-vm-join-domain/new-vm-join-domain.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "existingVNETName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "existingSubnetName": {
                        "value": "[variables('adSubnetName')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "[concat(variables('DCDnsPrefix'), '-br')]"
                    },
                    "vmSize": {
                        "value": "Standard_A2_v2"
                    },
                    "domainToJoin": {
                        "value": "[parameters('domainName')]"
                    },
                    "domainUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "domainPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "domainJoinOptions": {
                        "value": 3
                    },
                    "vmAdminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "vmAdminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "storageAccountName": {
                        "value":  "[variables('storageAccountName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "ConfigureBrokerMachine",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/CreateBrokerMachine"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/new-broker-vm/new-broker-vm.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "existingVNETName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "existingSubnetName": {
                        "value": "[variables('adSubnetName')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "[concat(variables('DCDnsPrefix'), '-br')]"
                    },
                    "vmSize": {
                        "value": "Standard_A2_v2"
                    },
                    "domainToJoin": {
                        "value": "[parameters('domainName')]"
                    },
                    "domainUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "domainPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "domainJoinOptions": {
                        "value": 3
                    },
                    "vmAdminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "vmAdminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "_artifactsLocation": {
                        "value": "[concat(parameters('_artifactsLocation'), '/new-broker-vm')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "CreateCM",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetDNSForVNet"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/new-cm-sg-ls-vm/azuredeploy.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "existingVNETName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "existingSubnetName": {
                        "value": "[variables('adSubnetName')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "[concat(variables('DCDnsPrefix'), '-cm')]"
                    },
                    "vmSize": {
                        "value": "Standard_A2_v2"
                    },
                    "vmAdminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "vmAdminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "brokerFQDN": {
                        "value": "[concat(variables('DCDnsPrefix'), '-br','.',parameters('domainName'),':8443')]"
                    },
                    "activationCode": {
                        "value": "[parameters('activationCode')]"
                    },
                    "storageAccountName": {
                        "value":  "[variables('storageAccountName')]"
                    }
                }
            }
        }
    ]
}
