{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subnetID": {
            "type": "string",
            "metadata": {
                "description": "ID of the subnet to attach to"
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "metadata": {
                "description": "Virtual machine name for both Azure and AD"
            }
        },
        "osType": {
            "type": "string",
            "defaultValue": "RHEL 7",
            "allowedValues": [
              "RHEL 7"
            ],
            "metadata": {
              "description": "Type of OS to use for VM."
            }
        },
        "agentType": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
              "Standard",
              "Graphics"
            ],
            "metadata": {
              "description": "PCoIP Agent Type: Standard or Graphics."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "The size of the virtual machines"
            }
        },
        "domainToJoin": {
            "type": "string",
            "metadata": {
                "description": "The FQDN of the AD domain"
            }
        },
        "domainGroupToJoin": {
            "type": "string"
        },
        "domainUsername": {
            "type": "string",
            "metadata": {
                "description": "Username of the account on the domain"
            }
        },
        "domainPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password of the account on the domain"
            }
        },
        "domainJoinOptions": {
            "defaultValue": 3,
            "type": "int",
            "metadata": {
                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'admin','administrator"
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the administrator account of the new VM and the domain"
            }
        },
        "registrationCode": {
          "type": "securestring",
          "minLength": 21,
          "metadata": {
            "description": "PCoIP Standard Agent License Registration Code."
          }
        },
        "storageAccountName": {
          "type": "string",
          "metadata": {
            "description": "Storage account to use for VM data and VHD's"
          }
        },
        "enableAutoShutdown": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag for enabling auto-shutdown on idle for Agents"
            }
        },
        "CAMDeploymentInfo": {
            "type": "securestring",
            "metadata": {
                "description": "Encoded blob of authorization and URL information for the CAM deployment"
            },
            "defaultValue": "null"
        },
        "userStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of user's storage account"
            },
            "defaultValue": ""
        },
        "userStorageAccountUri": {
            "type": "string",
            "metadata": {
                "description": "The URI of the user's storage account"
            },
            "defaultValue": ""
        },
        "userStorageAccountSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "SAS token for accesing user's storage account"
            },
            "defaultValue": "?public"
        },
        "userStorageAccountKey": {
            "type": "securestring",
            "metadata": {
                "description": "Key for accessing user's storage account"
            }
        },
        "binaryLocation": {
            "type": "string",
            "metadata": {
                "description": "Location for CAN deployment binaries"
            }
        },
        "AgentChannel": {
            "type": "string",
            "metadata": {
                "description": "PCoIP Agent channel to use for installer download."
            }
        }
    },
    "variables": {

        "apiVersion": "2015-06-15",
        "nicName": "[concat(parameters('dnsLabelPrefix'),'Nic')]",
        "enableAutoShutdown" : false,

        "osSettings": {
            "RHEL 7": {
              "publisher": "RedHat",
              "offer": "RHEL",
              "sku": "7.3",
              "version": "latest"
            }
        },
      
        "vmSettings": {
            "vmNamePrefix": "[parameters('dnsLabelPrefix')]",
            "adminUserName": "[parameters('vmAdminUsername')]",
            "adminPassword": "[parameters('vmAdminPassword')]",
            "vmSize": "[parameters('vmSize')]",
            "nicName": "[variables('nicName')]",
            "os": "[variables('osSettings')[parameters('osType')]]"
        },

        "scriptFileName": "Install-PCoIPAgent.sh",
        "idleShutdownScriptFileName": "Install-Idle-Shutdown.sh",
        "sumoCollectorID": "[concat('CAMPOC-',resourceGroup().name,'-Agent-',subscription().subscriptionId,'-',parameters('dnsLabelPrefix'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[parameters('subnetID')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmSettings').vmNamePrefix]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmSettings').vmNamePrefix]",
                    "adminUsername": "[variables('vmSettings').adminUserName]",
                    "adminPassword": "[variables('vmSettings').adminPassword]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmSettings').os.publisher]",
                        "offer": "[variables('vmSettings').os.offer]",
                        "sku": "[variables('vmSettings').os.sku]",
                        "version": "[variables('vmSettings').os.version]"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/',parameters('dnsLabelPrefix'), 'disk0.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "myvm-data-disk1",
                            "vhd": {
                                "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/',parameters('dnsLabelPrefix'), 'disk1.vhd')]"
                            },
                            "caching": "None",
                            "createOption": "Empty",
                            "diskSizeGB": "100",
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ]
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('dnsLabelPrefix'),'/PCoIPAgentShellScript')]",
          "apiVersion": "2017-03-30",
          "location": "[resourceGroup().location]",
          "dependsOn": [
              "[resourceId('Microsoft.Compute/virtualMachines', parameters('dnsLabelPrefix'))]"
          ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [ "[ concat(parameters('userStorageAccountUri'), 'remote-workstation','/', variables('scriptFileName'))]" ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash ', variables('scriptFileName'), ' \"', parameters('registrationCode'), '\" \"', parameters('agentType'), '\" \"', variables('vmSettings').vmNamePrefix, '\" \"', parameters('domainToJoin'), '\" \"', parameters('domainUsername'), '\" \"', parameters('domainPassword'), '\" \"', parameters('domainGroupToJoin'), '\" \"', parameters('AgentChannel'), '\" \"', parameters('userStorageAccountUri'),'remote-workstation', '\" \"', variables('sumoCollectorID'), '\" \"', parameters('userStorageAccountSasToken'), '\"')]",
                    "storageAccountName": "[parameters('userStorageAccountName')]",
                    "storageAccountKey": "[parameters('userStorageAccountKey')]"
                }
            }
        }
    ]
}
